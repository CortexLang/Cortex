
void PingPong::
	struct time::
		member sec : int32;
		member nanosec : uint32;
		
	// Specialized pingpong dispatcher
	class Dispatcher : implements:{lang::dispatcher} base:os::thread::
		int16 construct(Dispatcher object);
		void destruct(Dispatcher object);
		void handled(lang::observableEvent event);
		
		// Implement lang::dispatcher interface
		void post(lang::event event);
		lang::observableEvent getEvent(lang::observer observer, lang::object me, lang::object observable, lang::object src);
		
		// Override os::thread::run
		void run();
		member event : lang::observableEvent;
		member lastEvent : lang::observableEvent,PRIVATE|LOCAL;

	class Pinger::
		int16 construct(Pinger object);
		member dispatcher : lang::dispatcher;
		member isPing : lang::bool;
		member lastPing : time;
		member minPing : time;
		member maxPing : time;
		member cummPing : time;
		member samples : uint32;
		observer onEvent : null,ON_UPDATE|ON_SELF|ON_METAVALUE;
		
	Dispatcher pongDispatcher:;

	Pinger ping: null,true;
	Pinger pong: pongDispatcher,false;
	