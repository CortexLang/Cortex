//
// Show notifications of different object lifecycle events  

int32 a: 10

a := 20 // The := operator is a combined assignment and notification

update a // Update a without changing the value

update a: // Run code while a is locked, send notification when block ends
    a = 30


// Create object in scope of a
a::
    int32 b: 40

a::b := 40

// Observables on a
on define a: 
    "a is defined with value $a"

on update a:
    "a is updated with value $a"


// Observable on the scope of a
on define scope a:
    "define from ${observable.nameof()} (value is $observable)"

on update scope a:
    "update from ${observable.nameof()} (value is $observable)"

