PACKAGE = 'corto'

LIB = ['rt', 'dl', 'm', 'ffi']
LIB_PUBLIC = [] # projects don't need to link with rt, dl and m
CFLAGS ||= ["-Wunused-parameter"]

# Bootstrap: can't build corto packages without corto
NOCORTO = true

# When building a tar for the core, also include the build system
task :collect do
    verbose(false)
    buildPath = "#{ENV['HOME']}/.corto/pack/lib/corto/#{CORTO_VERSION}/build"
    sh "mkdir -p #{buildPath}"
    sh "cp -r #{ENV['CORTO_BUILD']}/* #{buildPath}/"
end

task :prebuild do
  # Always rebuild corto.c to ensure it contains the right information about the
  # corto library it was linked with.
  sh "rm -f .corto/obj/#{CORTO_PLATFORM}/corto.o"

  # When rebuilding corto, remove corto tool to avoid library conflicts when old
  # tool is built against a library in a different location.
  sh "rm -f #{CORTO_TARGET}/bin/corto"
end

require "#{ENV['CORTO_BUILD']}/package"
