<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ptr_8h" kind="file" language="C++">
    <compoundname>ptr.h</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="ptr_8h_1a1efe8df4ddf26258eb9845ee48d25cac" prot="public" static="no">
        <name>corto_ptr_cast</name>
        <param><defname>fromType</defname></param>
        <param><defname>from</defname></param>
        <param><defname>toType</defname></param>
        <param><defname>to</defname></param>
        <initializer><ref refid="ptr_8h_1ad19fafa4376dcd6be9de553a18fc50b3" kindref="member">_corto_ptr_cast</ref>(<ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(fromType), from, <ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(toType), to)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="218" column="9" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptr_8h_1a33137d6ad615a8b990f592d24d3d5137" prot="public" static="no">
        <name>corto_ptr_str</name>
        <param><defname>p</defname></param>
        <param><defname>type</defname></param>
        <param><defname>maxLength</defname></param>
        <initializer><ref refid="ptr_8h_1a4e6feac340f0e1ad1c595dccd50342f2" kindref="member">_corto_ptr_str</ref>(p, <ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(type), maxLength)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="219" column="9" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptr_8h_1a2d90dbd2b01b69023901e641f09d2bed" prot="public" static="no">
        <name>corto_ptr_fromStr</name>
        <param><defname>out</defname></param>
        <param><defname>type</defname></param>
        <param><defname>string</defname></param>
        <initializer><ref refid="ptr_8h_1a38d1d779e2b80a063b85ea5eda468834" kindref="member">_corto_ptr_fromStr</ref>(out, <ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(type), string)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="220" column="9" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptr_8h_1ace6ac5ac1f9e172e1511445e3c7132ee" prot="public" static="no">
        <name>corto_ptr_copy</name>
        <param><defname>p</defname></param>
        <param><defname>type</defname></param>
        <param><defname>src</defname></param>
        <initializer><ref refid="ptr_8h_1aff7db2b1f67b1b67c2f508943b175463" kindref="member">_corto_ptr_copy</ref>(p, <ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(type), src)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="221" column="9" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptr_8h_1ad6d484dc3c190cec4220d73f948b53e9" prot="public" static="no">
        <name>corto_ptr_compare</name>
        <param><defname>p1</defname></param>
        <param><defname>type</defname></param>
        <param><defname>p2</defname></param>
        <initializer><ref refid="ptr_8h_1ad462076a706827d20e7f0d8a3f3865d9" kindref="member">_corto_ptr_compare</ref>(p1, <ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(type), p2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="222" column="9" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptr_8h_1ab0488b7021a7dd32e9938c849f4d06de" prot="public" static="no">
        <name>corto_ptr_init</name>
        <param><defname>p</defname></param>
        <param><defname>type</defname></param>
        <initializer><ref refid="ptr_8h_1a0f828c61525d0f7b89a08641d7219b6f" kindref="member">_corto_ptr_init</ref>(p, <ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(type))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="223" column="9" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptr_8h_1a1379c681becb3d5a75ea2ac0180e6b35" prot="public" static="no">
        <name>corto_ptr_deinit</name>
        <param><defname>p</defname></param>
        <param><defname>type</defname></param>
        <initializer><ref refid="ptr_8h_1a6af8a43bea9c0f7c1f187558a115e0b4" kindref="member">_corto_ptr_deinit</ref>(p, <ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(type))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="224" column="9" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptr_8h_1a1570b44ed975e398d8c6838d52c562a9" prot="public" static="no">
        <name>corto_ptr_new</name>
        <param><defname>type</defname></param>
        <initializer><ref refid="ptr_8h_1a6448582d34cf896d3e10dd1070017364" kindref="member">_corto_ptr_new</ref>(<ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(type))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="225" column="9" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptr_8h_1afb4e4ede10ef7d802e2620518ea3e568" prot="public" static="no">
        <name>corto_ptr_free</name>
        <param><defname>type</defname></param>
        <param><defname>ptr</defname></param>
        <initializer><ref refid="ptr_8h_1a3e2228281221f79f675973328eb960d9" kindref="member">_corto_ptr_free</ref>(<ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref>(type), ptr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="226" column="9" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ptr_8h_1a6448582d34cf896d3e10dd1070017364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> void *</type>
        <definition>CORTO_EXPORT void* _corto_ptr_new</definition>
        <argsstring>(corto_type type)</argsstring>
        <name>_corto_ptr_new</name>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Allocate a new value on the heap. </para>        </briefdescription>
        <detaileddescription>
<para>This function allocates a new value on the heap that can hold the value of a corto type. If the specified type is a reference type, a pointer-sized value is returned. This function will invoke the initializer for the specified type.</para><para>Note that the result of this function is a plain heap object, not a corto object, so you cannot use functions that accept a corto_object instance.</para><para>To avoid memory leakage, the result of this function must be deallocated with corto_ptr_free.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for which to create the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An initialized value on the heap for the specified type. </para></simplesect>
<simplesect kind="see"><para><ref refid="ptr_8h_1afb4e4ede10ef7d802e2620518ea3e568" kindref="member">corto_ptr_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1a3e2228281221f79f675973328eb960d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> void</type>
        <definition>CORTO_EXPORT void _corto_ptr_free</definition>
        <argsstring>(corto_type type, void *ptr)</argsstring>
        <name>_corto_ptr_free</name>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Deallocate a value allocated with corto_ptr_new. </para>        </briefdescription>
        <detaileddescription>
<para>This function deallocates a value allocated with corto_ptr_new and will invoke the deinitializer for the specified type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value to be deallocated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="ptr_8h_1a1570b44ed975e398d8c6838d52c562a9" kindref="member">corto_ptr_new</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1a4e6feac340f0e1ad1c595dccd50342f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> char *</type>
        <definition>CORTO_EXPORT char* _corto_ptr_str</definition>
        <argsstring>(void *ptr, corto_type type, uint32_t maxLength)</argsstring>
        <name>_corto_ptr_str</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxLength</declname>
        </param>
        <briefdescription>
<para>Get a corto string representation for value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A serialized corto string for the value. Must be deallocated with free. </para></simplesect>
<simplesect kind="see"><para><ref refid="ptr_8h_1a2d90dbd2b01b69023901e641f09d2bed" kindref="member">corto_ptr_fromStr</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1a38d1d779e2b80a063b85ea5eda468834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> int16_t</type>
        <definition>CORTO_EXPORT int16_t _corto_ptr_fromStr</definition>
        <argsstring>(void *ptr, corto_type type, char *str)</argsstring>
        <name>_corto_ptr_fromStr</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Deserialize a string into a value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to deserialize into the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A serialized corto string for the value. Must be deallocated with free. </para></simplesect>
<simplesect kind="see"><para><ref refid="ptr_8h_1a33137d6ad615a8b990f592d24d3d5137" kindref="member">corto_ptr_str</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1aff7db2b1f67b1b67c2f508943b175463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> int16_t</type>
        <definition>CORTO_EXPORT int16_t _corto_ptr_copy</definition>
        <argsstring>(void *dst, corto_type type, void *src)</argsstring>
        <name>_corto_ptr_copy</name>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy value into another value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the destination value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source and destination value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the source value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, nonzero if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1aff2a8b5b8c48f462525728650f3bfb6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> int16_t</type>
        <definition>CORTO_EXPORT int16_t corto_ptr_unaryOp</definition>
        <argsstring>(corto_type type, corto_operatorKind _operator, void *ptr, void *result)</argsstring>
        <name>corto_ptr_unaryOp</name>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="core_2__type_8h_1a13fb18c6d9e6dc93030863154b162e88" kindref="member">corto_operatorKind</ref></type>
          <declname>_operator</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Perform unary operator on a value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_operator</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator to perform. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the operand value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the result value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, nonzero if failed. </para></simplesect>
<simplesect kind="see"><para><ref refid="ptr_8h_1a9bd4dd52450b2379e4f7db4dbfe50717" kindref="member">corto_ptr_binaryOp</ref> <ref refid="ptr_8h_1a1efe8df4ddf26258eb9845ee48d25cac" kindref="member">corto_ptr_cast</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1a9bd4dd52450b2379e4f7db4dbfe50717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> int16_t</type>
        <definition>CORTO_EXPORT int16_t corto_ptr_binaryOp</definition>
        <argsstring>(corto_type type, corto_operatorKind _operator, void *left, void *right, void *result)</argsstring>
        <name>corto_ptr_binaryOp</name>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="core_2__type_8h_1a13fb18c6d9e6dc93030863154b162e88" kindref="member">corto_operatorKind</ref></type>
          <declname>_operator</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>right</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Perform binary operator with two values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the left and right value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_operator</parametername>
</parameternamelist>
<parameterdescription>
<para>The operator to perform. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the left operand value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the right operand value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the result value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, nonzero if failed. </para></simplesect>
<simplesect kind="see"><para><ref refid="ptr_8h_1aff2a8b5b8c48f462525728650f3bfb6d" kindref="member">corto_ptr_unaryOp</ref> <ref refid="ptr_8h_1a1efe8df4ddf26258eb9845ee48d25cac" kindref="member">corto_ptr_cast</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1ad19fafa4376dcd6be9de553a18fc50b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> int16_t</type>
        <definition>CORTO_EXPORT int16_t _corto_ptr_cast</definition>
        <argsstring>(corto_type fromType, void *from, corto_type resultType, void *result)</argsstring>
        <name>_corto_ptr_cast</name>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>fromType</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>resultType</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Cast a value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fromType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value to cast. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value to cast. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resultType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to cast to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the result of the cast. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, nonzero if failed. </para></simplesect>
<simplesect kind="see"><para><ref refid="ptr_8h_1aff2a8b5b8c48f462525728650f3bfb6d" kindref="member">corto_ptr_unaryOp</ref> <ref refid="ptr_8h_1a9bd4dd52450b2379e4f7db4dbfe50717" kindref="member">corto_ptr_binaryOp</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1ad462076a706827d20e7f0d8a3f3865d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> <ref refid="lang_2__type_8h_1a2aecfe9c8ad66fd9c6f334887715b020" kindref="member">corto_equalityKind</ref></type>
        <definition>CORTO_EXPORT corto_equalityKind _corto_ptr_compare</definition>
        <argsstring>(void *ptr1, corto_type type, void *ptr2)</argsstring>
        <name>_corto_ptr_compare</name>
        <param>
          <type>void *</type>
          <declname>ptr1</declname>
        </param>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr2</declname>
        </param>
        <briefdescription>
<para>Compare two values. </para>        </briefdescription>
        <detaileddescription>
<para>Both values must be instances of the same type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the first value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the second value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CORTO_EQ, CORTO_LT, CORTO_GT when ptr1 is equal, larger or greater than ptr2. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1a0f828c61525d0f7b89a08641d7219b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> int16_t</type>
        <definition>CORTO_EXPORT int16_t _corto_ptr_init</definition>
        <argsstring>(void *ptr, corto_type type)</argsstring>
        <name>_corto_ptr_init</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Initialize a value. </para>        </briefdescription>
        <detaileddescription>
<para>This function is not needed when a value is allocated with corto_ptr_new. A valid example usecase for corto_ptr_init is when allocating a buffer for a sequence, and the new elements need to be initialized.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, -1 if failed. </para></simplesect>
<simplesect kind="see"><para><ref refid="ptr_8h_1a1379c681becb3d5a75ea2ac0180e6b35" kindref="member">corto_ptr_deinit</ref> <ref refid="ptr_8h_1a1570b44ed975e398d8c6838d52c562a9" kindref="member">corto_ptr_new</ref> <ref refid="ptr_8h_1afb4e4ede10ef7d802e2620518ea3e568" kindref="member">corto_ptr_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1a6af8a43bea9c0f7c1f187558a115e0b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> int16_t</type>
        <definition>CORTO_EXPORT int16_t _corto_ptr_deinit</definition>
        <argsstring>(void *ptr, corto_type type)</argsstring>
        <name>_corto_ptr_deinit</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="lang_2__type_8h_1acb5da53862edc3abc4e290a1bd0ba165" kindref="member">corto_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Deinitialize a value. </para>        </briefdescription>
        <detaileddescription>
<para>This function is not needed when a value is allocated with corto_ptr_new. A valid example usecase for corto_ptr_init is when deallocating a buffer for a sequence, and the elements need to be deinitialized.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, -1 if failed. </para></simplesect>
<simplesect kind="see"><para><ref refid="ptr_8h_1ab0488b7021a7dd32e9938c849f4d06de" kindref="member">corto_ptr_init</ref> <ref refid="ptr_8h_1a1570b44ed975e398d8c6838d52c562a9" kindref="member">corto_ptr_new</ref> <ref refid="ptr_8h_1afb4e4ede10ef7d802e2620518ea3e568" kindref="member">corto_ptr_free</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1afd9a1219f1b5d34864495f5816edc56d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> void</type>
        <definition>CORTO_EXPORT void corto_ptr_setref</definition>
        <argsstring>(void *ptr, corto_object object)</argsstring>
        <name>corto_ptr_setref</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="lang_2__type_8h_1ac604b6df806fdb3438bc2413be8aebf9" kindref="member">corto_object</ref></type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ptr_8h_1ad3085ae6cd3252016754596637cab738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="__project_8h_1aaf94e8b92f63a9c93989d705fdd1e573" kindref="member">CORTO_EXPORT</ref> void</type>
        <definition>CORTO_EXPORT void corto_ptr_setstr</definition>
        <argsstring>(char **ptr, char *str)</argsstring>
        <name>corto_ptr_setstr</name>
        <param>
          <type>char **</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h" line="214" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>API for native pointers. </para>    </briefdescription>
    <detaileddescription>
<para>Corto objects are the things that you put in the store! </para>    </detaileddescription>
    <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/include/ptr.h"/>
  </compounddef>
</doxygen>
