<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structcorto__compare__ser__t" kind="struct" language="C++" prot="public">
    <compoundname>corto_compare_ser_t</compoundname>
    <includes local="no">compare_ser.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structcorto__compare__ser__t_1a7d28c5154659ef8568598e4a54d6f462" prot="public" static="no" mutable="no">
        <type><ref refid="lang_2__type_8h_1a2aecfe9c8ad66fd9c6f334887715b020" kindref="member">corto_equalityKind</ref></type>
        <definition>corto_equalityKind corto_compare_ser_t::equals</definition>
        <argsstring></argsstring>
        <name>equals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" line="33" column="1" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcorto__compare__ser__t_1a25369280e1d6e10285e44d0b7af70ed0" prot="public" static="no" mutable="no">
        <type><ref refid="structcorto__value" kindref="compound">corto_value</ref></type>
        <definition>corto_value corto_compare_ser_t::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" line="34" column="1" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcorto__compare__ser__t_1a42b41026a64e98ddaa8259fa27185529" prot="public" static="no" mutable="no">
        <type><ref refid="lang_2__type_8h_1a2aecfe9c8ad66fd9c6f334887715b020" kindref="member">corto_equalityKind</ref></type>
        <definition>corto_equalityKind corto_compare_ser_t::result</definition>
        <argsstring></argsstring>
        <name>result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" line="35" column="1" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcorto__compare__ser__t_1a15a18765569c691e7e7ede39d5ed6d70" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* corto_compare_ser_t::base</definition>
        <argsstring></argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" line="38" column="1" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="243">
        <label>corto_destructAction</label>
        <link refid="structcorto__destruct_action"/>
        <childnode refid="239" relation="usage">
          <edgelabel>+super</edgelabel>
        </childnode>
      </node>
      <node id="240">
        <label>corto_function_s</label>
        <link refid="structcorto__function__s"/>
        <childnode refid="236" relation="usage">
          <edgelabel>+returnType</edgelabel>
        </childnode>
        <childnode refid="241" relation="usage">
          <edgelabel>+parameters</edgelabel>
        </childnode>
      </node>
      <node id="234">
        <label>corto_value</label>
        <link refid="structcorto__value"/>
        <childnode refid="235" relation="usage">
          <edgelabel>+t</edgelabel>
        </childnode>
        <childnode refid="234" relation="usage">
          <edgelabel>+parent</edgelabel>
        </childnode>
        <childnode refid="236" relation="usage">
          <edgelabel>+type</edgelabel>
          <edgelabel>+t</edgelabel>
          <edgelabel>+keyType</edgelabel>
        </childnode>
      </node>
      <node id="247">
        <label>corto_quantity_s</label>
        <link refid="structcorto__quantity__s"/>
      </node>
      <node id="239">
        <label>corto_delegatedata</label>
        <link refid="structcorto__delegatedata"/>
        <childnode refid="240" relation="usage">
          <edgelabel>+procedure</edgelabel>
        </childnode>
      </node>
      <node id="237">
        <label>corto_typeOptions</label>
        <link refid="structcorto__type_options"/>
        <childnode refid="236" relation="usage">
          <edgelabel>+parentType</edgelabel>
          <edgelabel>+defaultType</edgelabel>
          <edgelabel>+defaultProcedureType</edgelabel>
        </childnode>
      </node>
      <node id="242">
        <label>corto_parameter</label>
        <link refid="structcorto__parameter"/>
        <childnode refid="236" relation="usage">
          <edgelabel>+type</edgelabel>
        </childnode>
      </node>
      <node id="253">
        <label>corto_interfaceVectorseq</label>
        <link refid="structcorto__interface_vectorseq"/>
        <childnode refid="254" relation="usage">
          <edgelabel>+buffer</edgelabel>
        </childnode>
      </node>
      <node id="236">
        <label>corto_type_s</label>
        <link refid="structcorto__type__s"/>
        <childnode refid="237" relation="usage">
          <edgelabel>+options</edgelabel>
        </childnode>
        <childnode refid="238" relation="usage">
          <edgelabel>+nameof</edgelabel>
        </childnode>
        <childnode refid="243" relation="usage">
          <edgelabel>+deinit</edgelabel>
        </childnode>
        <childnode refid="244" relation="usage">
          <edgelabel>+init</edgelabel>
        </childnode>
        <childnode refid="245" relation="usage">
          <edgelabel>+metaprocedures</edgelabel>
        </childnode>
      </node>
      <node id="246">
        <label>corto_unit_s</label>
        <link refid="structcorto__unit__s"/>
        <childnode refid="247" relation="usage">
          <edgelabel>+quantity</edgelabel>
        </childnode>
        <childnode refid="236" relation="usage">
          <edgelabel>+type</edgelabel>
        </childnode>
        <childnode refid="248" relation="usage">
          <edgelabel>+super</edgelabel>
        </childnode>
      </node>
      <node id="241">
        <label>corto_parameterseq</label>
        <link refid="structcorto__parameterseq"/>
        <childnode refid="242" relation="usage">
          <edgelabel>+buffer</edgelabel>
        </childnode>
      </node>
      <node id="252">
        <label>corto_interfaceseq</label>
        <link refid="structcorto__interfaceseq"/>
        <childnode refid="250" relation="usage">
          <edgelabel>+buffer</edgelabel>
        </childnode>
      </node>
      <node id="251">
        <label>corto_stringseq</label>
        <link refid="structcorto__stringseq"/>
      </node>
      <node id="254">
        <label>corto_interfaceVector</label>
        <link refid="structcorto__interface_vector"/>
        <childnode refid="250" relation="usage">
          <edgelabel>+interface</edgelabel>
        </childnode>
        <childnode refid="245" relation="usage">
          <edgelabel>+vector</edgelabel>
        </childnode>
      </node>
      <node id="248">
        <label>corto_class_s</label>
        <link refid="structcorto__class__s"/>
        <childnode refid="249" relation="usage">
          <edgelabel>+super</edgelabel>
        </childnode>
        <childnode refid="252" relation="usage">
          <edgelabel>+implements</edgelabel>
        </childnode>
        <childnode refid="243" relation="usage">
          <edgelabel>+destruct</edgelabel>
        </childnode>
        <childnode refid="244" relation="usage">
          <edgelabel>+construct</edgelabel>
        </childnode>
        <childnode refid="253" relation="usage">
          <edgelabel>+interfaceVector</edgelabel>
        </childnode>
      </node>
      <node id="235">
        <label>corto_member_s</label>
        <link refid="structcorto__member__s"/>
        <childnode refid="236" relation="usage">
          <edgelabel>+type</edgelabel>
        </childnode>
        <childnode refid="246" relation="usage">
          <edgelabel>+unit</edgelabel>
        </childnode>
      </node>
      <node id="250">
        <label>corto_interface_s</label>
        <link refid="structcorto__interface__s"/>
        <childnode refid="250" relation="usage">
          <edgelabel>+base</edgelabel>
        </childnode>
        <childnode refid="236" relation="usage">
          <edgelabel>+super</edgelabel>
        </childnode>
        <childnode refid="245" relation="usage">
          <edgelabel>+methods</edgelabel>
          <edgelabel>+members</edgelabel>
        </childnode>
      </node>
      <node id="233">
        <label>corto_compare_ser_t</label>
        <link refid="structcorto__compare__ser__t"/>
        <childnode refid="234" relation="usage">
          <edgelabel>+value</edgelabel>
        </childnode>
      </node>
      <node id="245">
        <label>corto_objectseq</label>
        <link refid="structcorto__objectseq"/>
      </node>
      <node id="249">
        <label>corto_struct_s</label>
        <link refid="structcorto__struct__s"/>
        <childnode refid="250" relation="usage">
          <edgelabel>+super</edgelabel>
        </childnode>
        <childnode refid="251" relation="usage">
          <edgelabel>+keys</edgelabel>
        </childnode>
        <childnode refid="245" relation="usage">
          <edgelabel>+keycache</edgelabel>
        </childnode>
      </node>
      <node id="244">
        <label>corto_initAction</label>
        <link refid="structcorto__init_action"/>
        <childnode refid="239" relation="usage">
          <edgelabel>+super</edgelabel>
        </childnode>
      </node>
      <node id="238">
        <label>corto_nameAction</label>
        <link refid="structcorto__name_action"/>
        <childnode refid="239" relation="usage">
          <edgelabel>+super</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" line="32" column="1" bodyfile="/Users/sander/GitHub/cortoproject/corto/packages/corto/src/compare_ser.h" bodystart="32" bodyend="39"/>
    <listofallmembers>
      <member refid="structcorto__compare__ser__t_1a15a18765569c691e7e7ede39d5ed6d70" prot="public" virt="non-virtual"><scope>corto_compare_ser_t</scope><name>base</name></member>
      <member refid="structcorto__compare__ser__t_1a7d28c5154659ef8568598e4a54d6f462" prot="public" virt="non-virtual"><scope>corto_compare_ser_t</scope><name>equals</name></member>
      <member refid="structcorto__compare__ser__t_1a42b41026a64e98ddaa8259fa27185529" prot="public" virt="non-virtual"><scope>corto_compare_ser_t</scope><name>result</name></member>
      <member refid="structcorto__compare__ser__t_1a25369280e1d6e10285e44d0b7af70ed0" prot="public" virt="non-virtual"><scope>corto_compare_ser_t</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
