
void Animals::
    class Dog::
        bark: string
        int16 construct(Dog object):
            object.bark = "woof"

// Test suite testing a phony package
test::suite tc_animals: package=Animals::
    void woof() test::test:
        var Animals::Dog gijs = Animals::Dog{}
        tc_animals.assert(gijs.bark, "woof", "the dog does not bark properly")

    void bark() test::test:
        var Animals::Dog gijs = Animals::Dog{}
        tc_animals.assert(gijs.bark, "bar", "the dog barks properly but I'm failing nonetheless")

// Test suite testing the test suite
test::suite tc_test: package=cortex::test ::
    void suiteResult() test::test:
        tc_test.assert(!tc_animals.success, "tc_animals.success is not false")

    void woofResult() test::test:
        var test::unit woof = test::unit(@::.resolve("test::Animals::woof"))
        tc_test.assert(woof, "test::Animals::woof was not created")
        tc_test.assert(woof.success, "test::Animals::woof.success is not true")
        tc_test.assert(woof.failmsg, null, "test::Animals::woof.failmsg is not null")

    void barkResult() test::test:
        var test::unit bark = test::unit(@::.resolve("test::Animals::bark"))
        tc_test.assert(bark, "test::Animals::bark was not created")
        tc_test.assert(!bark.success, "test::Animals::woof.success is not false")
        tc_test.assert(bark.failmsg, "the dog barks properly but I'm failing nonetheless", "test::Animals::woof.failmsg is not null")
